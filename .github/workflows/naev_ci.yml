on: [push, pull_request]

name: CI

env:
  DESTDIR: "${{ github.workspace }}/dist/"
  MESON: "${{ github.workspace }}/source/meson.sh"

jobs:
  "Package_Source":
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Naev Repository
      uses: actions/checkout@v2
      with:
        path: source
        fetch-depth: 0

    - name: Update APT Cache
      run: |
        sudo apt-get update

    - name: Install Additional Build Dependencies
      run: |
        sudo apt-get install \
          ninja-build

    - name: Meson Build
      run: |
        sh $MESON setup build source -Dexecutable=disabled -Ddocs_c=disabled -Ddocs_lua=disabled
        sh $MESON dist -C build --no-tests --include-subprojects

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: naev-${{ github.sha }}
        path: ${{ github.workspace }}/build/meson-dist/*
        if-no-files-found: error

  "Compile_Naev":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-16.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

          - os: ubuntu-18.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

          - os: ubuntu-20.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

          - os: windows-2016
            shell: msys2 {0}
            config: windows.ini
            pkg-config-path: "[]"

          - os: windows-2019
            shell: msys2 {0}
            config: windows.ini
            pkg-config-path: "[]"

    defaults:
      run:
        shell: ${{ matrix.shell }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Update APT Cache
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update

    - name: Install Additional Build Dependencies
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get install \
          autopoint \
          binutils-dev \
          build-essential \
          gettext \
          intltool \
          libfreetype6-dev \
          libgl1-mesa-dev \
          libiberty-dev \
          libluajit-5.1-dev \
          libopenal-dev \
          libpng-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsuitesparse-dev \
          libvorbis-dev \
          libxml2-dev

    - name: Install Ninja-Build (xenial-backports)
      if: ${{ matrix.os == 'ubuntu-16.04' && runner.os == 'Linux'}}
      run: |
        sudo apt-get -t xenial-backports install \
          ninja-build

    - name: Install Ninja-Build
      if: ${{ matrix.os != 'ubuntu-16.04' && runner.os == 'Linux'}}
      run: |
        sudo apt-get install \
          ninja-build

    - name: Install MinGW Packages
      if: ${{ runner.os == 'Windows'}}
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        path-type: strict
        install: git tar mingw-w64-x86_64-clang mingw-w64-x86_64-freetype mingw-w64-x86_64-libvorbis mingw-w64-x86_64-libxml2 mingw-w64-x86_64-luajit mingw-w64-x86_64-mesa mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-openal mingw-w64-x86_64-pkg-config mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_mixer mingw-w64-x86_64-suitesparse

    - name: Get Source
      uses: actions/download-artifact@v2
      with:
        name: naev-${{ github.sha }}

    - name: Extract Source
      run: |
        mkdir source
        tar -xf naev-*.tar.xz -C source --strip 1

    - name: Meson Setup
      id: setup
      run: |
        sh $MESON setup build source \
            --native-file='source/utils/build/${{ matrix.config }}' \
            --buildtype=release \
            --pkg-config-path=${{ matrix.pkg-config-path }} \
            -Db_lto=true \
            -Dauto_features=enabled \
            -Ddocs_c=disabled \
            -Ddocs_lua=disabled

    - name: Upload Setup Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.setup.outcome == 'failure' }}
      with:
        name: ${{ matrix.os }}-${{ github.sha }}-setup-log
        path: ${{ github.workspace }}/build/meson-logs/meson-log.txt
        if-no-files-found: ignore

    - name: Meson Compile
      id: compile
      run: |
        sh $MESON compile -C build

    - name: Upload Compile Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.compile.outcome == 'failure' }}
      with:
        name: ${{ matrix.os }}-${{ github.sha }}-compile-log
        path: ${{ github.workspace }}/build/meson-logs/meson-log.txt
        if-no-files-found: ignore

#    - name: Meson Test
#      id: tests
#      run: |
#        ${{ matrix.test-env }} sh $MESON test -C build --print-errorlogs
#
#    - name: Upload test log
#      uses: actions/upload-artifact@v2
#      if: ${{ success() || steps.tests.outcome == 'failure' }}
#      with:
#        name: ${{ matrix.os }}-${{ github.sha }}-test-log
#        path: ${{ github.workspace }}/build/meson-logs/testlog.txt
#        if-no-files-found: ignore

    - name: Package
      run: |
        sh $MESON install -C build
        tar -cvf naev-${{ matrix.os }}-${{ github.sha }}.tar dist
#      if: ${{ success() || steps.tests.outcome == 'failure' }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
#      if: ${{ success() || steps.tests.outcome == 'failure' }}
      with:
        name: naev-${{ matrix.os }}-${{ github.sha }}
        path: ${{ github.workspace }}/*.tar
        if-no-files-found: error

  "Compile_AppImage":
    needs: "Package_Source"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-16.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

          - os: ubuntu-18.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

          - os: ubuntu-20.04
            shell: bash
            config: linux.ini
            pkg-config-path: "[]"

    defaults:
      run:
        shell: ${{ matrix.shell }}

    runs-on: ${{ matrix.os }}

    steps:
    - name: Update APT Cache
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get update

    - name: Install Additional Build Dependencies
      if: ${{ runner.os == 'Linux'}}
      run: |
        sudo apt-get install \
          autopoint \
          binutils-dev \
          build-essential \
          gettext \
          intltool \
          libfreetype6-dev \
          libgl1-mesa-dev \
          libiberty-dev \
          libluajit-5.1-dev \
          libopenal-dev \
          libpng-dev \
          libsdl2-dev \
          libsdl2-image-dev \
          libsdl2-mixer-dev \
          libsuitesparse-dev \
          libvorbis-dev \
          libxml2-dev

    - name: Install Ninja-Build (xenial-backports)
      if: ${{ matrix.os == 'ubuntu-16.04' && runner.os == 'Linux'}}
      run: |
        sudo apt-get -t xenial-backports install \
          ninja-build

    - name: Install Ninja-Build
      if: ${{ matrix.os != 'ubuntu-16.04' && runner.os == 'Linux'}}
      run: |
        sudo apt-get install \
          ninja-build

    - name: Get Source
      uses: actions/download-artifact@v2
      with:
        name: naev-${{ github.sha }}

    - name: Extract Source
      run: |
        mkdir source
        tar -xf naev-*.tar.xz -C source --strip 1

    - name: Compile AppImage
      id: compile
      run: |
        sh source/utils/buildAppImage.sh -s "source" -b "build" -o "${{ env.DESTDIR }}" |& tee -a appImageBuildLog.txt

    - name: Upload Compile Log
      uses: actions/upload-artifact@v2
      if: ${{ success() || steps.compile.outcome == 'failure' }}
      with:
        name: ${{ matrix.os }}-${{ github.sha }}-appimageBuild-log
        path: ${{ github.workspace }}/appImageBuildLog.txt
        if-no-files-found: ignore

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: naev-${{ matrix.os }}-AppImage-${{ github.sha }}
        path: ${{ env.DESTDIR }}/out/*.AppImage
        if-no-files-found: error

  "Documentation":
    runs-on: ubuntu-latest
    needs: "Package_Source"

    steps:
    - name: Update APT Cache
      run: |
        sudo apt-get update
    - name: Install Additional Build Dependencies
      run: |
        sudo apt-get install \
          lua-ldoc \
          graphviz \
          doxygen \
          ninja-build
    - name: Get Source
      uses: actions/download-artifact@v2
      with:
        name: naev-${{ github.sha }}

    - name: Extract Source
      run: |
        mkdir source
        tar -xf naev-*.tar.xz -C source --strip 1
        
    - name: Meson Build
      run: |
        sh $MESON setup build source \
            -Dexecutable=disabled
             
    - name: Package
      run: |
        sh $MESON install -C build
        tar -cvf ${{ github.workspace }}/naev-docs-${{ github.sha }}.tar ${{ env.DESTDIR }}/usr/local/doc/naev
        
    - name: Upload Lua Documentation
      if: ${{ github.event_name == 'push' && github.repository == 'naev/naev' }}
      run: |
        curl -X POST https://api.github.com/repos/naev/naev.github.io/dispatches \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        -u ${{ secrets.WEBSITE_ACCESS_TOKEN }} \
        --data '{"event_type": "api", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: naev-docs-${{ github.sha }}
        path: ${{ github.workspace }}/*.tar
        if-no-files-found: error
